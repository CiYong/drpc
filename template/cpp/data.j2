#ifndef __{{ scope }}_{{ interface_name }}_data_hpp__
#define __{{ scope }}_{{ interface_name }}_data_hpp__

#include "dmsgpack.hpp"

namespace {{ scope }} {

enum class {{ name }}Api {
{% for function in functions %}    {{function.ident}} = {{ function.id }}, // {{ function.comment }}
{% endfor %}
};

} // namespace {{ scope }}

using namespace {{ scope }};
MSGPACK_ADD_ENUM({{ name }}Api);

namespace {{ scope }} {
{% for enumurator in data_types.enums %}
enum class {{ enumurator.ident }} {
{% for member in enumurator.members %}    {{ member.name }} = {{ member.type }},
{% endfor %}
};
{% endfor %}
{% for data_struct in data_types.structs %}
// {{ data_struct.ident }}
struct {{ data_struct.ident }} {
    {% for member in data_struct.members %} {{ member.type }} {{ member.name }};
    {% endfor %}
};
{% endfor %}
} // namespace {{ scope }}
{% for enumurator in data_types.enums %}
MSGPACK_ADD_ENUM({{ enumurator.ident }});{% endfor %}

{% for data_struct in data_types.structs %}
DORM_MSGPACK({{data_struct.ident}},
{% for member in data_struct.members %}             {{ member.name }}{% if not member.is_last %},{% endif %}
{% endfor %})
{% endfor %}

#endif // __{{ scope }}_{{ interface_name }}_data_hpp__
